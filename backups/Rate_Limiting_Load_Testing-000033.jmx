<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Rate_Limiting_Load_Testing" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1000</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="save_user" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
    &quot;firstName&quot;: &quot;John&quot;,&#xd;
    &quot;lastName&quot;: &quot;Doe&quot;,&#xd;
    &quot;birthDate&quot;: &quot;1986-08-19T15:45:00-0800&quot;,&#xd;
    &quot;gender&quot;: &quot;male&quot;,&#xd;
    &quot;email&quot;: &quot;john@doe.com&quot;,&#xd;
    &quot;phone&quot;: &quot;+551155256325&quot;,&#xd;
    &quot;company&quot;: &quot;Alphabet Inc.&quot;,&#xd;
    &quot;attributes&quot;: {&#xd;
        &quot;Age&quot;: &quot;31&quot;,&#xd;
        &quot;Twitter username&quot;: &quot;@origjohndoe86&quot;,&#xd;
        &quot;Dollars spent&quot;: 461.93,&#xd;
        &quot;Points earned&quot;: 78732&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.webengage.net</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/accounts/311c48b3/users</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="header" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer 22235860-ee22-4c2d-a0b6-9782f76feab9</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="SimpleDataWriter" testclass="ResultCollector" testname="Writing Result to File" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>true</responseData>
                <samplerData>false</samplerData>
                <xml>true</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>true</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <hostname>true</hostname>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename">load-testing/save_user/results.xml</stringProp>
          </ResultCollector>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assertin Response Status" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
              <stringProp name="51579">429</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Save Responses to a file" enabled="true">
            <stringProp name="FileSaver.filename"></stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.successonly">false</boolProp>
            <boolProp name="FileSaver.skipsuffix">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">false</boolProp>
            <stringProp name="FileSaver.variablename">load-testing/save_user/response</stringProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="save_users_bulk" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;users&quot;: [&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;firstName&quot;: &quot;John&quot;,&#xd;
            &quot;lastName&quot;: &quot;Doe&quot;,&#xd;
            &quot;birthDate&quot;: &quot;1986-08-19T15:45:00-0800&quot;,&#xd;
            &quot;gender&quot;: &quot;male&quot;,&#xd;
            &quot;email&quot;: &quot;john@doe.com&quot;,&#xd;
            &quot;phone&quot;: &quot;+551155256325&quot;,&#xd;
            &quot;company&quot;: &quot;Alphabet Inc.&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;Age&quot;: &quot;31&quot;,&#xd;
                &quot;Twitter username&quot;: &quot;@origjohndoe86&quot;,&#xd;
                &quot;Dollars spent&quot;: 461.93,&#xd;
                &quot;Points earned&quot;: 78732&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;firstName&quot;: &quot;John&quot;,&#xd;
            &quot;lastName&quot;: &quot;Doe&quot;,&#xd;
            &quot;birthDate&quot;: &quot;1986-08-19T15:45:00-0800&quot;,&#xd;
            &quot;gender&quot;: &quot;male&quot;,&#xd;
            &quot;email&quot;: &quot;john@doe.com&quot;,&#xd;
            &quot;phone&quot;: &quot;+551155256325&quot;,&#xd;
            &quot;company&quot;: &quot;Alphabet Inc.&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;Age&quot;: &quot;31&quot;,&#xd;
                &quot;Twitter username&quot;: &quot;@origjohndoe86&quot;,&#xd;
                &quot;Dollars spent&quot;: 461.93,&#xd;
                &quot;Points earned&quot;: 78732&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;firstName&quot;: &quot;John&quot;,&#xd;
            &quot;lastName&quot;: &quot;Doe&quot;,&#xd;
            &quot;birthDate&quot;: &quot;1986-08-19T15:45:00-0800&quot;,&#xd;
            &quot;gender&quot;: &quot;male&quot;,&#xd;
            &quot;email&quot;: &quot;john@doe.com&quot;,&#xd;
            &quot;phone&quot;: &quot;+551155256325&quot;,&#xd;
            &quot;company&quot;: &quot;Alphabet Inc.&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;Age&quot;: &quot;31&quot;,&#xd;
                &quot;Twitter username&quot;: &quot;@origjohndoe86&quot;,&#xd;
                &quot;Dollars spent&quot;: 461.93,&#xd;
                &quot;Points earned&quot;: 78732&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;firstName&quot;: &quot;John&quot;,&#xd;
            &quot;lastName&quot;: &quot;Doe&quot;,&#xd;
            &quot;birthDate&quot;: &quot;1986-08-19T15:45:00-0800&quot;,&#xd;
            &quot;gender&quot;: &quot;male&quot;,&#xd;
            &quot;email&quot;: &quot;john@doe.com&quot;,&#xd;
            &quot;phone&quot;: &quot;+551155256325&quot;,&#xd;
            &quot;company&quot;: &quot;Alphabet Inc.&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;Age&quot;: &quot;31&quot;,&#xd;
                &quot;Twitter username&quot;: &quot;@origjohndoe86&quot;,&#xd;
                &quot;Dollars spent&quot;: 461.93,&#xd;
                &quot;Points earned&quot;: 78732&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;firstName&quot;: &quot;John&quot;,&#xd;
            &quot;lastName&quot;: &quot;Doe&quot;,&#xd;
            &quot;birthDate&quot;: &quot;1986-08-19T15:45:00-0800&quot;,&#xd;
            &quot;gender&quot;: &quot;male&quot;,&#xd;
            &quot;email&quot;: &quot;john@doe.com&quot;,&#xd;
            &quot;phone&quot;: &quot;+551155256325&quot;,&#xd;
            &quot;company&quot;: &quot;Alphabet Inc.&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;Age&quot;: &quot;31&quot;,&#xd;
                &quot;Twitter username&quot;: &quot;@origjohndoe86&quot;,&#xd;
                &quot;Dollars spent&quot;: 461.93,&#xd;
                &quot;Points earned&quot;: 78732&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;firstName&quot;: &quot;John&quot;,&#xd;
            &quot;lastName&quot;: &quot;Doe&quot;,&#xd;
            &quot;birthDate&quot;: &quot;1986-08-19T15:45:00-0800&quot;,&#xd;
            &quot;gender&quot;: &quot;male&quot;,&#xd;
            &quot;email&quot;: &quot;john@doe.com&quot;,&#xd;
            &quot;phone&quot;: &quot;+551155256325&quot;,&#xd;
            &quot;company&quot;: &quot;Alphabet Inc.&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;Age&quot;: &quot;31&quot;,&#xd;
                &quot;Twitter username&quot;: &quot;@origjohndoe86&quot;,&#xd;
                &quot;Dollars spent&quot;: 461.93,&#xd;
                &quot;Points earned&quot;: 78732&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;firstName&quot;: &quot;John&quot;,&#xd;
            &quot;lastName&quot;: &quot;Doe&quot;,&#xd;
            &quot;birthDate&quot;: &quot;1986-08-19T15:45:00-0800&quot;,&#xd;
            &quot;gender&quot;: &quot;male&quot;,&#xd;
            &quot;email&quot;: &quot;john@doe.com&quot;,&#xd;
            &quot;phone&quot;: &quot;+551155256325&quot;,&#xd;
            &quot;company&quot;: &quot;Alphabet Inc.&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;Age&quot;: &quot;31&quot;,&#xd;
                &quot;Twitter username&quot;: &quot;@origjohndoe86&quot;,&#xd;
                &quot;Dollars spent&quot;: 461.93,&#xd;
                &quot;Points earned&quot;: 78732&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;firstName&quot;: &quot;John&quot;,&#xd;
            &quot;lastName&quot;: &quot;Doe&quot;,&#xd;
            &quot;birthDate&quot;: &quot;1986-08-19T15:45:00-0800&quot;,&#xd;
            &quot;gender&quot;: &quot;male&quot;,&#xd;
            &quot;email&quot;: &quot;john@doe.com&quot;,&#xd;
            &quot;phone&quot;: &quot;+551155256325&quot;,&#xd;
            &quot;company&quot;: &quot;Alphabet Inc.&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;Age&quot;: &quot;31&quot;,&#xd;
                &quot;Twitter username&quot;: &quot;@origjohndoe86&quot;,&#xd;
                &quot;Dollars spent&quot;: 461.93,&#xd;
                &quot;Points earned&quot;: 78732&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;firstName&quot;: &quot;John&quot;,&#xd;
            &quot;lastName&quot;: &quot;Doe&quot;,&#xd;
            &quot;birthDate&quot;: &quot;1986-08-19T15:45:00-0800&quot;,&#xd;
            &quot;gender&quot;: &quot;male&quot;,&#xd;
            &quot;email&quot;: &quot;john@doe.com&quot;,&#xd;
            &quot;phone&quot;: &quot;+551155256325&quot;,&#xd;
            &quot;company&quot;: &quot;Alphabet Inc.&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;Age&quot;: &quot;31&quot;,&#xd;
                &quot;Twitter username&quot;: &quot;@origjohndoe86&quot;,&#xd;
                &quot;Dollars spent&quot;: 461.93,&#xd;
                &quot;Points earned&quot;: 78732&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;firstName&quot;: &quot;John&quot;,&#xd;
            &quot;lastName&quot;: &quot;Doe&quot;,&#xd;
            &quot;birthDate&quot;: &quot;1986-08-19T15:45:00-0800&quot;,&#xd;
            &quot;gender&quot;: &quot;male&quot;,&#xd;
            &quot;email&quot;: &quot;john@doe.com&quot;,&#xd;
            &quot;phone&quot;: &quot;+551155256325&quot;,&#xd;
            &quot;company&quot;: &quot;Alphabet Inc.&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;Age&quot;: &quot;31&quot;,&#xd;
                &quot;Twitter username&quot;: &quot;@origjohndoe86&quot;,&#xd;
                &quot;Dollars spent&quot;: 461.93,&#xd;
                &quot;Points earned&quot;: 78732&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;firstName&quot;: &quot;John&quot;,&#xd;
            &quot;lastName&quot;: &quot;Doe&quot;,&#xd;
            &quot;birthDate&quot;: &quot;1986-08-19T15:45:00-0800&quot;,&#xd;
            &quot;gender&quot;: &quot;male&quot;,&#xd;
            &quot;email&quot;: &quot;john@doe.com&quot;,&#xd;
            &quot;phone&quot;: &quot;+551155256325&quot;,&#xd;
            &quot;company&quot;: &quot;Alphabet Inc.&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;Age&quot;: &quot;31&quot;,&#xd;
                &quot;Twitter username&quot;: &quot;@origjohndoe86&quot;,&#xd;
                &quot;Dollars spent&quot;: 461.93,&#xd;
                &quot;Points earned&quot;: 78732&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;firstName&quot;: &quot;John&quot;,&#xd;
            &quot;lastName&quot;: &quot;Doe&quot;,&#xd;
            &quot;birthDate&quot;: &quot;1986-08-19T15:45:00-0800&quot;,&#xd;
            &quot;gender&quot;: &quot;male&quot;,&#xd;
            &quot;email&quot;: &quot;john@doe.com&quot;,&#xd;
            &quot;phone&quot;: &quot;+551155256325&quot;,&#xd;
            &quot;company&quot;: &quot;Alphabet Inc.&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;Age&quot;: &quot;31&quot;,&#xd;
                &quot;Twitter username&quot;: &quot;@origjohndoe86&quot;,&#xd;
                &quot;Dollars spent&quot;: 461.93,&#xd;
                &quot;Points earned&quot;: 78732&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;firstName&quot;: &quot;John&quot;,&#xd;
            &quot;lastName&quot;: &quot;Doe&quot;,&#xd;
            &quot;birthDate&quot;: &quot;1986-08-19T15:45:00-0800&quot;,&#xd;
            &quot;gender&quot;: &quot;male&quot;,&#xd;
            &quot;email&quot;: &quot;john@doe.com&quot;,&#xd;
            &quot;phone&quot;: &quot;+551155256325&quot;,&#xd;
            &quot;company&quot;: &quot;Alphabet Inc.&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;Age&quot;: &quot;31&quot;,&#xd;
                &quot;Twitter username&quot;: &quot;@origjohndoe86&quot;,&#xd;
                &quot;Dollars spent&quot;: 461.93,&#xd;
                &quot;Points earned&quot;: 78732&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;firstName&quot;: &quot;John&quot;,&#xd;
            &quot;lastName&quot;: &quot;Doe&quot;,&#xd;
            &quot;birthDate&quot;: &quot;1986-08-19T15:45:00-0800&quot;,&#xd;
            &quot;gender&quot;: &quot;male&quot;,&#xd;
            &quot;email&quot;: &quot;john@doe.com&quot;,&#xd;
            &quot;phone&quot;: &quot;+551155256325&quot;,&#xd;
            &quot;company&quot;: &quot;Alphabet Inc.&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;Age&quot;: &quot;31&quot;,&#xd;
                &quot;Twitter username&quot;: &quot;@origjohndoe86&quot;,&#xd;
                &quot;Dollars spent&quot;: 461.93,&#xd;
                &quot;Points earned&quot;: 78732&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;firstName&quot;: &quot;John&quot;,&#xd;
            &quot;lastName&quot;: &quot;Doe&quot;,&#xd;
            &quot;birthDate&quot;: &quot;1986-08-19T15:45:00-0800&quot;,&#xd;
            &quot;gender&quot;: &quot;male&quot;,&#xd;
            &quot;email&quot;: &quot;john@doe.com&quot;,&#xd;
            &quot;phone&quot;: &quot;+551155256325&quot;,&#xd;
            &quot;company&quot;: &quot;Alphabet Inc.&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;Age&quot;: &quot;31&quot;,&#xd;
                &quot;Twitter username&quot;: &quot;@origjohndoe86&quot;,&#xd;
                &quot;Dollars spent&quot;: 461.93,&#xd;
                &quot;Points earned&quot;: 78732&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;firstName&quot;: &quot;John&quot;,&#xd;
            &quot;lastName&quot;: &quot;Doe&quot;,&#xd;
            &quot;birthDate&quot;: &quot;1986-08-19T15:45:00-0800&quot;,&#xd;
            &quot;gender&quot;: &quot;male&quot;,&#xd;
            &quot;email&quot;: &quot;john@doe.com&quot;,&#xd;
            &quot;phone&quot;: &quot;+551155256325&quot;,&#xd;
            &quot;company&quot;: &quot;Alphabet Inc.&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;Age&quot;: &quot;31&quot;,&#xd;
                &quot;Twitter username&quot;: &quot;@origjohndoe86&quot;,&#xd;
                &quot;Dollars spent&quot;: 461.93,&#xd;
                &quot;Points earned&quot;: 78732&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;firstName&quot;: &quot;John&quot;,&#xd;
            &quot;lastName&quot;: &quot;Doe&quot;,&#xd;
            &quot;birthDate&quot;: &quot;1986-08-19T15:45:00-0800&quot;,&#xd;
            &quot;gender&quot;: &quot;male&quot;,&#xd;
            &quot;email&quot;: &quot;john@doe.com&quot;,&#xd;
            &quot;phone&quot;: &quot;+551155256325&quot;,&#xd;
            &quot;company&quot;: &quot;Alphabet Inc.&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;Age&quot;: &quot;31&quot;,&#xd;
                &quot;Twitter username&quot;: &quot;@origjohndoe86&quot;,&#xd;
                &quot;Dollars spent&quot;: 461.93,&#xd;
                &quot;Points earned&quot;: 78732&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;firstName&quot;: &quot;John&quot;,&#xd;
            &quot;lastName&quot;: &quot;Doe&quot;,&#xd;
            &quot;birthDate&quot;: &quot;1986-08-19T15:45:00-0800&quot;,&#xd;
            &quot;gender&quot;: &quot;male&quot;,&#xd;
            &quot;email&quot;: &quot;john@doe.com&quot;,&#xd;
            &quot;phone&quot;: &quot;+551155256325&quot;,&#xd;
            &quot;company&quot;: &quot;Alphabet Inc.&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;Age&quot;: &quot;31&quot;,&#xd;
                &quot;Twitter username&quot;: &quot;@origjohndoe86&quot;,&#xd;
                &quot;Dollars spent&quot;: 461.93,&#xd;
                &quot;Points earned&quot;: 78732&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;firstName&quot;: &quot;John&quot;,&#xd;
            &quot;lastName&quot;: &quot;Doe&quot;,&#xd;
            &quot;birthDate&quot;: &quot;1986-08-19T15:45:00-0800&quot;,&#xd;
            &quot;gender&quot;: &quot;male&quot;,&#xd;
            &quot;email&quot;: &quot;john@doe.com&quot;,&#xd;
            &quot;phone&quot;: &quot;+551155256325&quot;,&#xd;
            &quot;company&quot;: &quot;Alphabet Inc.&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;Age&quot;: &quot;31&quot;,&#xd;
                &quot;Twitter username&quot;: &quot;@origjohndoe86&quot;,&#xd;
                &quot;Dollars spent&quot;: 461.93,&#xd;
                &quot;Points earned&quot;: 78732&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;firstName&quot;: &quot;John&quot;,&#xd;
            &quot;lastName&quot;: &quot;Doe&quot;,&#xd;
            &quot;birthDate&quot;: &quot;1986-08-19T15:45:00-0800&quot;,&#xd;
            &quot;gender&quot;: &quot;male&quot;,&#xd;
            &quot;email&quot;: &quot;john@doe.com&quot;,&#xd;
            &quot;phone&quot;: &quot;+551155256325&quot;,&#xd;
            &quot;company&quot;: &quot;Alphabet Inc.&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;Age&quot;: &quot;31&quot;,&#xd;
                &quot;Twitter username&quot;: &quot;@origjohndoe86&quot;,&#xd;
                &quot;Dollars spent&quot;: 461.93,&#xd;
                &quot;Points earned&quot;: 78732&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;firstName&quot;: &quot;John&quot;,&#xd;
            &quot;lastName&quot;: &quot;Doe&quot;,&#xd;
            &quot;birthDate&quot;: &quot;1986-08-19T15:45:00-0800&quot;,&#xd;
            &quot;gender&quot;: &quot;male&quot;,&#xd;
            &quot;email&quot;: &quot;john@doe.com&quot;,&#xd;
            &quot;phone&quot;: &quot;+551155256325&quot;,&#xd;
            &quot;company&quot;: &quot;Alphabet Inc.&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;Age&quot;: &quot;31&quot;,&#xd;
                &quot;Twitter username&quot;: &quot;@origjohndoe86&quot;,&#xd;
                &quot;Dollars spent&quot;: 461.93,&#xd;
                &quot;Points earned&quot;: 78732&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;firstName&quot;: &quot;John&quot;,&#xd;
            &quot;lastName&quot;: &quot;Doe&quot;,&#xd;
            &quot;birthDate&quot;: &quot;1986-08-19T15:45:00-0800&quot;,&#xd;
            &quot;gender&quot;: &quot;male&quot;,&#xd;
            &quot;email&quot;: &quot;john@doe.com&quot;,&#xd;
            &quot;phone&quot;: &quot;+551155256325&quot;,&#xd;
            &quot;company&quot;: &quot;Alphabet Inc.&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;Age&quot;: &quot;31&quot;,&#xd;
                &quot;Twitter username&quot;: &quot;@origjohndoe86&quot;,&#xd;
                &quot;Dollars spent&quot;: 461.93,&#xd;
                &quot;Points earned&quot;: 78732&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;firstName&quot;: &quot;John&quot;,&#xd;
            &quot;lastName&quot;: &quot;Doe&quot;,&#xd;
            &quot;birthDate&quot;: &quot;1986-08-19T15:45:00-0800&quot;,&#xd;
            &quot;gender&quot;: &quot;male&quot;,&#xd;
            &quot;email&quot;: &quot;john@doe.com&quot;,&#xd;
            &quot;phone&quot;: &quot;+551155256325&quot;,&#xd;
            &quot;company&quot;: &quot;Alphabet Inc.&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;Age&quot;: &quot;31&quot;,&#xd;
                &quot;Twitter username&quot;: &quot;@origjohndoe86&quot;,&#xd;
                &quot;Dollars spent&quot;: 461.93,&#xd;
                &quot;Points earned&quot;: 78732&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;firstName&quot;: &quot;John&quot;,&#xd;
            &quot;lastName&quot;: &quot;Doe&quot;,&#xd;
            &quot;birthDate&quot;: &quot;1986-08-19T15:45:00-0800&quot;,&#xd;
            &quot;gender&quot;: &quot;male&quot;,&#xd;
            &quot;email&quot;: &quot;john@doe.com&quot;,&#xd;
            &quot;phone&quot;: &quot;+551155256325&quot;,&#xd;
            &quot;company&quot;: &quot;Alphabet Inc.&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;Age&quot;: &quot;31&quot;,&#xd;
                &quot;Twitter username&quot;: &quot;@origjohndoe86&quot;,&#xd;
                &quot;Dollars spent&quot;: 461.93,&#xd;
                &quot;Points earned&quot;: 78732&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;firstName&quot;: &quot;John&quot;,&#xd;
            &quot;lastName&quot;: &quot;Doe&quot;,&#xd;
            &quot;birthDate&quot;: &quot;1986-08-19T15:45:00-0800&quot;,&#xd;
            &quot;gender&quot;: &quot;male&quot;,&#xd;
            &quot;email&quot;: &quot;john@doe.com&quot;,&#xd;
            &quot;phone&quot;: &quot;+551155256325&quot;,&#xd;
            &quot;company&quot;: &quot;Alphabet Inc.&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;Age&quot;: &quot;31&quot;,&#xd;
                &quot;Twitter username&quot;: &quot;@origjohndoe86&quot;,&#xd;
                &quot;Dollars spent&quot;: 461.93,&#xd;
                &quot;Points earned&quot;: 78732&#xd;
            }&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.webengage.net</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/accounts/311c48b3/bulk-users</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="header" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer 22235860-ee22-4c2d-a0b6-9782f76feab9</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="SimpleDataWriter" testclass="ResultCollector" testname="Writing Result to File" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>true</responseData>
                <samplerData>false</samplerData>
                <xml>true</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>true</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <hostname>true</hostname>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename">load-testing/save_users_bulk/results.xml</stringProp>
          </ResultCollector>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assertin Response Status" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
              <stringProp name="51579">429</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Save Responses to a file" enabled="true">
            <stringProp name="FileSaver.filename"></stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.successonly">false</boolProp>
            <boolProp name="FileSaver.skipsuffix">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">false</boolProp>
            <stringProp name="FileSaver.variablename">load-testing/save_users_bulk/response</stringProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="save_event" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
    &quot;eventName&quot;: &quot;Added to Cart&quot;,&#xd;
    &quot;eventTime&quot;: &quot;2018-09-15T18:29:00-0800&quot;,&#xd;
    &quot;eventData&quot;: {&#xd;
        &quot;Product ID&quot;: 1337,&#xd;
        &quot;Price&quot;: 39.80,&#xd;
        &quot;Quantity&quot;: 1,&#xd;
        &quot;Product&quot;: &quot;Givenchy Pour Homme Cologne&quot;,&#xd;
        &quot;Category&quot;: &quot;Fragrance&quot;,&#xd;
        &quot;Currency&quot;: &quot;USD&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.webengage.net</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/accounts/311c48b3/events</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="header" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer 22235860-ee22-4c2d-a0b6-9782f76feab9</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="SimpleDataWriter" testclass="ResultCollector" testname="Writing Result to File" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>true</responseData>
                <samplerData>false</samplerData>
                <xml>true</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>true</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <hostname>true</hostname>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename">load-testing/save_event/results.xml</stringProp>
          </ResultCollector>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assertin Response Status" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
              <stringProp name="51579">429</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Save Responses to a file" enabled="true">
            <stringProp name="FileSaver.filename"></stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.successonly">false</boolProp>
            <boolProp name="FileSaver.skipsuffix">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">false</boolProp>
            <stringProp name="FileSaver.variablename">load-testing/save_event/response</stringProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="save_events_bulk" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;events&quot;: [&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;eventName&quot;: &quot;Added to Cart&quot;,&#xd;
            &quot;eventTime&quot;: &quot;2018-09-15T18:29:00-0800&quot;,&#xd;
            &quot;eventData&quot;: {&#xd;
                &quot;Product ID&quot;: 1337,&#xd;
                &quot;Price&quot;: 39.80,&#xd;
                &quot;Quantity&quot;: 1,&#xd;
                &quot;Product&quot;: &quot;Givenchy Pour Homme Cologne&quot;,&#xd;
                &quot;Category&quot;: &quot;Fragrance&quot;,&#xd;
                &quot;Currency&quot;: &quot;USD&quot;&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;eventName&quot;: &quot;Added to Cart&quot;,&#xd;
            &quot;eventTime&quot;: &quot;2018-09-15T18:29:00-0800&quot;,&#xd;
            &quot;eventData&quot;: {&#xd;
                &quot;Product ID&quot;: 1337,&#xd;
                &quot;Price&quot;: 39.80,&#xd;
                &quot;Quantity&quot;: 1,&#xd;
                &quot;Product&quot;: &quot;Givenchy Pour Homme Cologne&quot;,&#xd;
                &quot;Category&quot;: &quot;Fragrance&quot;,&#xd;
                &quot;Currency&quot;: &quot;USD&quot;&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;eventName&quot;: &quot;Added to Cart&quot;,&#xd;
            &quot;eventTime&quot;: &quot;2018-09-15T18:29:00-0800&quot;,&#xd;
            &quot;eventData&quot;: {&#xd;
                &quot;Product ID&quot;: 1337,&#xd;
                &quot;Price&quot;: 39.80,&#xd;
                &quot;Quantity&quot;: 1,&#xd;
                &quot;Product&quot;: &quot;Givenchy Pour Homme Cologne&quot;,&#xd;
                &quot;Category&quot;: &quot;Fragrance&quot;,&#xd;
                &quot;Currency&quot;: &quot;USD&quot;&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;eventName&quot;: &quot;Added to Cart&quot;,&#xd;
            &quot;eventTime&quot;: &quot;2018-09-15T18:29:00-0800&quot;,&#xd;
            &quot;eventData&quot;: {&#xd;
                &quot;Product ID&quot;: 1337,&#xd;
                &quot;Price&quot;: 39.80,&#xd;
                &quot;Quantity&quot;: 1,&#xd;
                &quot;Product&quot;: &quot;Givenchy Pour Homme Cologne&quot;,&#xd;
                &quot;Category&quot;: &quot;Fragrance&quot;,&#xd;
                &quot;Currency&quot;: &quot;USD&quot;&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;eventName&quot;: &quot;Added to Cart&quot;,&#xd;
            &quot;eventTime&quot;: &quot;2018-09-15T18:29:00-0800&quot;,&#xd;
            &quot;eventData&quot;: {&#xd;
                &quot;Product ID&quot;: 1337,&#xd;
                &quot;Price&quot;: 39.80,&#xd;
                &quot;Quantity&quot;: 1,&#xd;
                &quot;Product&quot;: &quot;Givenchy Pour Homme Cologne&quot;,&#xd;
                &quot;Category&quot;: &quot;Fragrance&quot;,&#xd;
                &quot;Currency&quot;: &quot;USD&quot;&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;eventName&quot;: &quot;Added to Cart&quot;,&#xd;
            &quot;eventTime&quot;: &quot;2018-09-15T18:29:00-0800&quot;,&#xd;
            &quot;eventData&quot;: {&#xd;
                &quot;Product ID&quot;: 1337,&#xd;
                &quot;Price&quot;: 39.80,&#xd;
                &quot;Quantity&quot;: 1,&#xd;
                &quot;Product&quot;: &quot;Givenchy Pour Homme Cologne&quot;,&#xd;
                &quot;Category&quot;: &quot;Fragrance&quot;,&#xd;
                &quot;Currency&quot;: &quot;USD&quot;&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;eventName&quot;: &quot;Added to Cart&quot;,&#xd;
            &quot;eventTime&quot;: &quot;2018-09-15T18:29:00-0800&quot;,&#xd;
            &quot;eventData&quot;: {&#xd;
                &quot;Product ID&quot;: 1337,&#xd;
                &quot;Price&quot;: 39.80,&#xd;
                &quot;Quantity&quot;: 1,&#xd;
                &quot;Product&quot;: &quot;Givenchy Pour Homme Cologne&quot;,&#xd;
                &quot;Category&quot;: &quot;Fragrance&quot;,&#xd;
                &quot;Currency&quot;: &quot;USD&quot;&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;eventName&quot;: &quot;Added to Cart&quot;,&#xd;
            &quot;eventTime&quot;: &quot;2018-09-15T18:29:00-0800&quot;,&#xd;
            &quot;eventData&quot;: {&#xd;
                &quot;Product ID&quot;: 1337,&#xd;
                &quot;Price&quot;: 39.80,&#xd;
                &quot;Quantity&quot;: 1,&#xd;
                &quot;Product&quot;: &quot;Givenchy Pour Homme Cologne&quot;,&#xd;
                &quot;Category&quot;: &quot;Fragrance&quot;,&#xd;
                &quot;Currency&quot;: &quot;USD&quot;&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;eventName&quot;: &quot;Added to Cart&quot;,&#xd;
            &quot;eventTime&quot;: &quot;2018-09-15T18:29:00-0800&quot;,&#xd;
            &quot;eventData&quot;: {&#xd;
                &quot;Product ID&quot;: 1337,&#xd;
                &quot;Price&quot;: 39.80,&#xd;
                &quot;Quantity&quot;: 1,&#xd;
                &quot;Product&quot;: &quot;Givenchy Pour Homme Cologne&quot;,&#xd;
                &quot;Category&quot;: &quot;Fragrance&quot;,&#xd;
                &quot;Currency&quot;: &quot;USD&quot;&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;eventName&quot;: &quot;Added to Cart&quot;,&#xd;
            &quot;eventTime&quot;: &quot;2018-09-15T18:29:00-0800&quot;,&#xd;
            &quot;eventData&quot;: {&#xd;
                &quot;Product ID&quot;: 1337,&#xd;
                &quot;Price&quot;: 39.80,&#xd;
                &quot;Quantity&quot;: 1,&#xd;
                &quot;Product&quot;: &quot;Givenchy Pour Homme Cologne&quot;,&#xd;
                &quot;Category&quot;: &quot;Fragrance&quot;,&#xd;
                &quot;Currency&quot;: &quot;USD&quot;&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;eventName&quot;: &quot;Added to Cart&quot;,&#xd;
            &quot;eventTime&quot;: &quot;2018-09-15T18:29:00-0800&quot;,&#xd;
            &quot;eventData&quot;: {&#xd;
                &quot;Product ID&quot;: 1337,&#xd;
                &quot;Price&quot;: 39.80,&#xd;
                &quot;Quantity&quot;: 1,&#xd;
                &quot;Product&quot;: &quot;Givenchy Pour Homme Cologne&quot;,&#xd;
                &quot;Category&quot;: &quot;Fragrance&quot;,&#xd;
                &quot;Currency&quot;: &quot;USD&quot;&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;eventName&quot;: &quot;Added to Cart&quot;,&#xd;
            &quot;eventTime&quot;: &quot;2018-09-15T18:29:00-0800&quot;,&#xd;
            &quot;eventData&quot;: {&#xd;
                &quot;Product ID&quot;: 1337,&#xd;
                &quot;Price&quot;: 39.80,&#xd;
                &quot;Quantity&quot;: 1,&#xd;
                &quot;Product&quot;: &quot;Givenchy Pour Homme Cologne&quot;,&#xd;
                &quot;Category&quot;: &quot;Fragrance&quot;,&#xd;
                &quot;Currency&quot;: &quot;USD&quot;&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;eventName&quot;: &quot;Added to Cart&quot;,&#xd;
            &quot;eventTime&quot;: &quot;2018-09-15T18:29:00-0800&quot;,&#xd;
            &quot;eventData&quot;: {&#xd;
                &quot;Product ID&quot;: 1337,&#xd;
                &quot;Price&quot;: 39.80,&#xd;
                &quot;Quantity&quot;: 1,&#xd;
                &quot;Product&quot;: &quot;Givenchy Pour Homme Cologne&quot;,&#xd;
                &quot;Category&quot;: &quot;Fragrance&quot;,&#xd;
                &quot;Currency&quot;: &quot;USD&quot;&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;eventName&quot;: &quot;Added to Cart&quot;,&#xd;
            &quot;eventTime&quot;: &quot;2018-09-15T18:29:00-0800&quot;,&#xd;
            &quot;eventData&quot;: {&#xd;
                &quot;Product ID&quot;: 1337,&#xd;
                &quot;Price&quot;: 39.80,&#xd;
                &quot;Quantity&quot;: 1,&#xd;
                &quot;Product&quot;: &quot;Givenchy Pour Homme Cologne&quot;,&#xd;
                &quot;Category&quot;: &quot;Fragrance&quot;,&#xd;
                &quot;Currency&quot;: &quot;USD&quot;&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;eventName&quot;: &quot;Added to Cart&quot;,&#xd;
            &quot;eventTime&quot;: &quot;2018-09-15T18:29:00-0800&quot;,&#xd;
            &quot;eventData&quot;: {&#xd;
                &quot;Product ID&quot;: 1337,&#xd;
                &quot;Price&quot;: 39.80,&#xd;
                &quot;Quantity&quot;: 1,&#xd;
                &quot;Product&quot;: &quot;Givenchy Pour Homme Cologne&quot;,&#xd;
                &quot;Category&quot;: &quot;Fragrance&quot;,&#xd;
                &quot;Currency&quot;: &quot;USD&quot;&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;eventName&quot;: &quot;Added to Cart&quot;,&#xd;
            &quot;eventTime&quot;: &quot;2018-09-15T18:29:00-0800&quot;,&#xd;
            &quot;eventData&quot;: {&#xd;
                &quot;Product ID&quot;: 1337,&#xd;
                &quot;Price&quot;: 39.80,&#xd;
                &quot;Quantity&quot;: 1,&#xd;
                &quot;Product&quot;: &quot;Givenchy Pour Homme Cologne&quot;,&#xd;
                &quot;Category&quot;: &quot;Fragrance&quot;,&#xd;
                &quot;Currency&quot;: &quot;USD&quot;&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;eventName&quot;: &quot;Added to Cart&quot;,&#xd;
            &quot;eventTime&quot;: &quot;2018-09-15T18:29:00-0800&quot;,&#xd;
            &quot;eventData&quot;: {&#xd;
                &quot;Product ID&quot;: 1337,&#xd;
                &quot;Price&quot;: 39.80,&#xd;
                &quot;Quantity&quot;: 1,&#xd;
                &quot;Product&quot;: &quot;Givenchy Pour Homme Cologne&quot;,&#xd;
                &quot;Category&quot;: &quot;Fragrance&quot;,&#xd;
                &quot;Currency&quot;: &quot;USD&quot;&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;eventName&quot;: &quot;Added to Cart&quot;,&#xd;
            &quot;eventTime&quot;: &quot;2018-09-15T18:29:00-0800&quot;,&#xd;
            &quot;eventData&quot;: {&#xd;
                &quot;Product ID&quot;: 1337,&#xd;
                &quot;Price&quot;: 39.80,&#xd;
                &quot;Quantity&quot;: 1,&#xd;
                &quot;Product&quot;: &quot;Givenchy Pour Homme Cologne&quot;,&#xd;
                &quot;Category&quot;: &quot;Fragrance&quot;,&#xd;
                &quot;Currency&quot;: &quot;USD&quot;&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;eventName&quot;: &quot;Added to Cart&quot;,&#xd;
            &quot;eventTime&quot;: &quot;2018-09-15T18:29:00-0800&quot;,&#xd;
            &quot;eventData&quot;: {&#xd;
                &quot;Product ID&quot;: 1337,&#xd;
                &quot;Price&quot;: 39.80,&#xd;
                &quot;Quantity&quot;: 1,&#xd;
                &quot;Product&quot;: &quot;Givenchy Pour Homme Cologne&quot;,&#xd;
                &quot;Category&quot;: &quot;Fragrance&quot;,&#xd;
                &quot;Currency&quot;: &quot;USD&quot;&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;eventName&quot;: &quot;Added to Cart&quot;,&#xd;
            &quot;eventTime&quot;: &quot;2018-09-15T18:29:00-0800&quot;,&#xd;
            &quot;eventData&quot;: {&#xd;
                &quot;Product ID&quot;: 1337,&#xd;
                &quot;Price&quot;: 39.80,&#xd;
                &quot;Quantity&quot;: 1,&#xd;
                &quot;Product&quot;: &quot;Givenchy Pour Homme Cologne&quot;,&#xd;
                &quot;Category&quot;: &quot;Fragrance&quot;,&#xd;
                &quot;Currency&quot;: &quot;USD&quot;&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;eventName&quot;: &quot;Added to Cart&quot;,&#xd;
            &quot;eventTime&quot;: &quot;2018-09-15T18:29:00-0800&quot;,&#xd;
            &quot;eventData&quot;: {&#xd;
                &quot;Product ID&quot;: 1337,&#xd;
                &quot;Price&quot;: 39.80,&#xd;
                &quot;Quantity&quot;: 1,&#xd;
                &quot;Product&quot;: &quot;Givenchy Pour Homme Cologne&quot;,&#xd;
                &quot;Category&quot;: &quot;Fragrance&quot;,&#xd;
                &quot;Currency&quot;: &quot;USD&quot;&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;eventName&quot;: &quot;Added to Cart&quot;,&#xd;
            &quot;eventTime&quot;: &quot;2018-09-15T18:29:00-0800&quot;,&#xd;
            &quot;eventData&quot;: {&#xd;
                &quot;Product ID&quot;: 1337,&#xd;
                &quot;Price&quot;: 39.80,&#xd;
                &quot;Quantity&quot;: 1,&#xd;
                &quot;Product&quot;: &quot;Givenchy Pour Homme Cologne&quot;,&#xd;
                &quot;Category&quot;: &quot;Fragrance&quot;,&#xd;
                &quot;Currency&quot;: &quot;USD&quot;&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;eventName&quot;: &quot;Added to Cart&quot;,&#xd;
            &quot;eventTime&quot;: &quot;2018-09-15T18:29:00-0800&quot;,&#xd;
            &quot;eventData&quot;: {&#xd;
                &quot;Product ID&quot;: 1337,&#xd;
                &quot;Price&quot;: 39.80,&#xd;
                &quot;Quantity&quot;: 1,&#xd;
                &quot;Product&quot;: &quot;Givenchy Pour Homme Cologne&quot;,&#xd;
                &quot;Category&quot;: &quot;Fragrance&quot;,&#xd;
                &quot;Currency&quot;: &quot;USD&quot;&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;eventName&quot;: &quot;Added to Cart&quot;,&#xd;
            &quot;eventTime&quot;: &quot;2018-09-15T18:29:00-0800&quot;,&#xd;
            &quot;eventData&quot;: {&#xd;
                &quot;Product ID&quot;: 1337,&#xd;
                &quot;Price&quot;: 39.80,&#xd;
                &quot;Quantity&quot;: 1,&#xd;
                &quot;Product&quot;: &quot;Givenchy Pour Homme Cologne&quot;,&#xd;
                &quot;Category&quot;: &quot;Fragrance&quot;,&#xd;
                &quot;Currency&quot;: &quot;USD&quot;&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
            &quot;eventName&quot;: &quot;Added to Cart&quot;,&#xd;
            &quot;eventTime&quot;: &quot;2018-09-15T18:29:00-0800&quot;,&#xd;
            &quot;eventData&quot;: {&#xd;
                &quot;Product ID&quot;: 1337,&#xd;
                &quot;Price&quot;: 39.80,&#xd;
                &quot;Quantity&quot;: 1,&#xd;
                &quot;Product&quot;: &quot;Givenchy Pour Homme Cologne&quot;,&#xd;
                &quot;Category&quot;: &quot;Fragrance&quot;,&#xd;
                &quot;Currency&quot;: &quot;USD&quot;&#xd;
            }&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.webengage.net</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/accounts/311c48b3/bulk-events</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="header" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer 22235860-ee22-4c2d-a0b6-9782f76feab9</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="SimpleDataWriter" testclass="ResultCollector" testname="Writing Result to File" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>true</responseData>
                <samplerData>false</samplerData>
                <xml>true</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>true</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <hostname>true</hostname>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename">load-testing/save_events-bulk/results.xml</stringProp>
          </ResultCollector>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assertin Response Status" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
              <stringProp name="51579">429</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Save Responses to a file" enabled="true">
            <stringProp name="FileSaver.filename"></stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.successonly">false</boolProp>
            <boolProp name="FileSaver.skipsuffix">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">false</boolProp>
            <stringProp name="FileSaver.variablename">load-testing/save_events_bulk/response</stringProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="save_business-event" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;eventName&quot;: &quot;Sample event&quot;,&#xd;
    &quot;eventData&quot;: {&#xd;
        &quot;key1&quot;: &quot;value1&quot;,&#xd;
        &quot;key2&quot;: &quot;value2&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.webengage.net</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v2/accounts/311c48b3/business/save-event</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="header" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer 22235860-ee22-4c2d-a0b6-9782f76feab9</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="SimpleDataWriter" testclass="ResultCollector" testname="Writing Result to File" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>true</responseData>
                <samplerData>false</samplerData>
                <xml>true</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>true</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <hostname>true</hostname>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename">load-testing/save_event/results.xml</stringProp>
          </ResultCollector>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assertin Response Status" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
              <stringProp name="51579">429</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Save Responses to a file" enabled="true">
            <stringProp name="FileSaver.filename"></stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.successonly">false</boolProp>
            <boolProp name="FileSaver.skipsuffix">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">false</boolProp>
            <stringProp name="FileSaver.variablename">load-testing/save_business-event/response</stringProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="save_event" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;userId&quot;: &quot;johndoe&quot;,&#xd;
    &quot;eventName&quot;: &quot;Added to Cart&quot;,&#xd;
    &quot;eventTime&quot;: &quot;2018-09-15T18:29:00-0800&quot;,&#xd;
    &quot;eventData&quot;: {&#xd;
        &quot;Product ID&quot;: 1337,&#xd;
        &quot;Price&quot;: 39.80,&#xd;
        &quot;Quantity&quot;: 1,&#xd;
        &quot;Product&quot;: &quot;Givenchy Pour Homme Cologne&quot;,&#xd;
        &quot;Category&quot;: &quot;Fragrance&quot;,&#xd;
        &quot;Currency&quot;: &quot;USD&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.domain">api.webengage.net</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/accounts/311c48b3/events</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="header" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer 22235860-ee22-4c2d-a0b6-9782f76feab9</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="SimpleDataWriter" testclass="ResultCollector" testname="Writing Result to File" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>true</responseData>
                <samplerData>false</samplerData>
                <xml>true</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>true</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <hostname>true</hostname>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename">load-testing/save_event/results.xml</stringProp>
          </ResultCollector>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assertin Response Status" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
              <stringProp name="51579">429</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Save Responses to a file" enabled="true">
            <stringProp name="FileSaver.filename"></stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.successonly">false</boolProp>
            <boolProp name="FileSaver.skipsuffix">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">false</boolProp>
            <stringProp name="FileSaver.variablename">load-testing/save_event/respose</stringProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
